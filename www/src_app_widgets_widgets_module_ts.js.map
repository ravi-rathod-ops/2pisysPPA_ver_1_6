{"version":3,"file":"src_app_widgets_widgets_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACnBoB;AACT;IAO5B,WAAW,SAAX,WAAW;IAWtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QATlC,eAAU,GAAC,EAAE,CAAC;QACd,YAAO,GAAG;YACR,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,6BAA6B,EAAE,IAAI,EAAE,UAAU,EAAE;YAC5E,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,UAAU,EAAE;YACvE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,SAAS,EAAE;YACzE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,4BAA4B,EAAE,IAAI,EAAE,WAAW,EAAE;SAC9E,CAAC;QAIA,IAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,EACrF;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IAErB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,UAAU,GAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;IAGD,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY;QACV,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,+BAA+B;QAEjF,IAAI,WAAW,IAAI,OAAO,EAAE;YAC1B,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YACzC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;IAEH,CAAC;CAEF;;YAnDQ,mDAAM;;AAOF,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW,CA4CvB;AA5CuB","sources":["./src/app/widgets/widgets-routing.module.ts","./src/app/widgets/widgets.module.ts","./src/app/widgets/widgets.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WidgetsPage } from './widgets.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WidgetsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WidgetsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WidgetsPageRoutingModule } from './widgets-routing.module';\n\nimport { WidgetsPage } from './widgets.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WidgetsPageRoutingModule\n  ],\n  declarations: [WidgetsPage]\n})\nexport class WidgetsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-widgets',\n  templateUrl: './widgets.page.html',\n  styleUrls: ['./widgets.page.scss'],\n})\nexport class WidgetsPage implements OnInit {\n\n  brandImage=\"\";\n  widgets = [\n    { label: 'PROCESS', image: './assets/image/planning.png', page: 'Planhome' },\n    { label: 'VIEW', image: './assets/image/status.png', page: 'Moulding' },\n    { label: 'REPORTS', image: './assets/image/report.png', page: 'Reports' },\n    { label: 'APPROVAL', image: './assets/image/approve.png', page: 'approvals' }\n  ];\n  \n  \n  constructor(private router: Router) {\n    if(localStorage.getItem('userid') == null && localStorage.getItem('password') == null)\n    {\n      this.router.navigate([\"home\"]);   \n    }\n\n    this.checkStorage();\n\n   }\n\n  ngOnInit() {\n    this.brandImage=localStorage.getItem('brandImage');\n  }\n\n\n  routePage(page){\n    this.router.navigate([page]);\n  }\n\n  checkStorage() {\n    const storage = parseInt(localStorage.getItem(\"your-data-key\"));\n    let date = new Date();\n    const currentDate = date.setDate(date.getDate()); // Current date in milliseconds\n  \n    if (currentDate >= storage) {      \n      localStorage.removeItem(\"your-data-key\");\n      localStorage.removeItem(\"userid\");\n      localStorage.removeItem(\"password\"); \n      this.router.navigate([\"home\"]);      \n    }\n  \n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}